// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`header if user admin renders properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header
    user={
      Object {
        "_id": "id",
        "nick": "nick",
        "role": "admin",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Menu
          className="menu_101l2md"
          stackable={true}
        >
          <MenuHeader>
            <Logo />
          </MenuHeader>
          <MenuMenu
            position="right"
          >
            <MenuItem
              as={[Function]}
              link={true}
              name="admin"
              to="/admin"
            >
              Адміністрування
            </MenuItem>
            <MenuItem
              as={[Function]}
              link={true}
              name="lessons"
              to="/lessons"
            >
              Предмети
            </MenuItem>
            <MenuItem
              link={true}
              onClick={[Function]}
            >
              nick
            </MenuItem>
          </MenuMenu>
        </Menu>,
        <ConfirmModal
          icon="sign-out"
          message="Ви дійсно бажаєте вийти?"
          onClose={[Function]}
          onSuccess={[Function]}
          open={false}
          title="Вийти"
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <MenuHeader>
              <Logo />
            </MenuHeader>,
            <MenuMenu
              position="right"
            >
              <MenuItem
                as={[Function]}
                link={true}
                name="admin"
                to="/admin"
              >
                Адміністрування
              </MenuItem>
              <MenuItem
                as={[Function]}
                link={true}
                name="lessons"
                to="/lessons"
              >
                Предмети
              </MenuItem>
              <MenuItem
                link={true}
                onClick={[Function]}
              >
                nick
              </MenuItem>
            </MenuMenu>,
          ],
          "className": "menu_101l2md",
          "stackable": true,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <Logo />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <MenuItem
                  as={[Function]}
                  link={true}
                  name="admin"
                  to="/admin"
                >
                  Адміністрування
                </MenuItem>,
                <MenuItem
                  as={[Function]}
                  link={true}
                  name="lessons"
                  to="/lessons"
                >
                  Предмети
                </MenuItem>,
                <MenuItem
                  link={true}
                  onClick={[Function]}
                >
                  nick
                </MenuItem>,
              ],
              "position": "right",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "as": [Function],
                  "children": "Адміністрування",
                  "link": true,
                  "name": "admin",
                  "to": "/admin",
                },
                "ref": null,
                "rendered": "Адміністрування",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "as": [Function],
                  "children": "Предмети",
                  "link": true,
                  "name": "lessons",
                  "to": "/lessons",
                },
                "ref": null,
                "rendered": "Предмети",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "nick",
                  "link": true,
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "nick",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "icon": "sign-out",
          "message": "Ви дійсно бажаєте вийти?",
          "onClose": [Function],
          "onSuccess": [Function],
          "open": false,
          "title": "Вийти",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Menu
            className="menu_101l2md"
            stackable={true}
          >
            <MenuHeader>
              <Logo />
            </MenuHeader>
            <MenuMenu
              position="right"
            >
              <MenuItem
                as={[Function]}
                link={true}
                name="admin"
                to="/admin"
              >
                Адміністрування
              </MenuItem>
              <MenuItem
                as={[Function]}
                link={true}
                name="lessons"
                to="/lessons"
              >
                Предмети
              </MenuItem>
              <MenuItem
                link={true}
                onClick={[Function]}
              >
                nick
              </MenuItem>
            </MenuMenu>
          </Menu>,
          <ConfirmModal
            icon="sign-out"
            message="Ви дійсно бажаєте вийти?"
            onClose={[Function]}
            onSuccess={[Function]}
            open={false}
            title="Вийти"
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <MenuHeader>
                <Logo />
              </MenuHeader>,
              <MenuMenu
                position="right"
              >
                <MenuItem
                  as={[Function]}
                  link={true}
                  name="admin"
                  to="/admin"
                >
                  Адміністрування
                </MenuItem>
                <MenuItem
                  as={[Function]}
                  link={true}
                  name="lessons"
                  to="/lessons"
                >
                  Предмети
                </MenuItem>
                <MenuItem
                  link={true}
                  onClick={[Function]}
                >
                  nick
                </MenuItem>
              </MenuMenu>,
            ],
            "className": "menu_101l2md",
            "stackable": true,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <Logo />,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <MenuItem
                    as={[Function]}
                    link={true}
                    name="admin"
                    to="/admin"
                  >
                    Адміністрування
                  </MenuItem>,
                  <MenuItem
                    as={[Function]}
                    link={true}
                    name="lessons"
                    to="/lessons"
                  >
                    Предмети
                  </MenuItem>,
                  <MenuItem
                    link={true}
                    onClick={[Function]}
                  >
                    nick
                  </MenuItem>,
                ],
                "position": "right",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "as": [Function],
                    "children": "Адміністрування",
                    "link": true,
                    "name": "admin",
                    "to": "/admin",
                  },
                  "ref": null,
                  "rendered": "Адміністрування",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "as": [Function],
                    "children": "Предмети",
                    "link": true,
                    "name": "lessons",
                    "to": "/lessons",
                  },
                  "ref": null,
                  "rendered": "Предмети",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "nick",
                    "link": true,
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "nick",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "icon": "sign-out",
            "message": "Ви дійсно бажаєте вийти?",
            "onClose": [Function],
            "onSuccess": [Function],
            "open": false,
            "title": "Вийти",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`header if user login renders properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header
    user={
      Object {
        "_id": "id",
        "nick": "nick",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Menu
          className="menu_101l2md"
          stackable={true}
        >
          <MenuHeader>
            <Logo />
          </MenuHeader>
          <MenuMenu
            position="right"
          >
            <MenuItem
              as={[Function]}
              link={true}
              name="lessons"
              to="/lessons"
            >
              Предмети
            </MenuItem>
            <MenuItem
              link={true}
              onClick={[Function]}
            >
              nick
            </MenuItem>
          </MenuMenu>
        </Menu>,
        <ConfirmModal
          icon="sign-out"
          message="Ви дійсно бажаєте вийти?"
          onClose={[Function]}
          onSuccess={[Function]}
          open={false}
          title="Вийти"
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <MenuHeader>
              <Logo />
            </MenuHeader>,
            <MenuMenu
              position="right"
            >
              <MenuItem
                as={[Function]}
                link={true}
                name="lessons"
                to="/lessons"
              >
                Предмети
              </MenuItem>
              <MenuItem
                link={true}
                onClick={[Function]}
              >
                nick
              </MenuItem>
            </MenuMenu>,
          ],
          "className": "menu_101l2md",
          "stackable": true,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <Logo />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                false,
                <MenuItem
                  as={[Function]}
                  link={true}
                  name="lessons"
                  to="/lessons"
                >
                  Предмети
                </MenuItem>,
                <MenuItem
                  link={true}
                  onClick={[Function]}
                >
                  nick
                </MenuItem>,
              ],
              "position": "right",
            },
            "ref": null,
            "rendered": Array [
              false,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "as": [Function],
                  "children": "Предмети",
                  "link": true,
                  "name": "lessons",
                  "to": "/lessons",
                },
                "ref": null,
                "rendered": "Предмети",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "nick",
                  "link": true,
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "nick",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "icon": "sign-out",
          "message": "Ви дійсно бажаєте вийти?",
          "onClose": [Function],
          "onSuccess": [Function],
          "open": false,
          "title": "Вийти",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Menu
            className="menu_101l2md"
            stackable={true}
          >
            <MenuHeader>
              <Logo />
            </MenuHeader>
            <MenuMenu
              position="right"
            >
              <MenuItem
                as={[Function]}
                link={true}
                name="lessons"
                to="/lessons"
              >
                Предмети
              </MenuItem>
              <MenuItem
                link={true}
                onClick={[Function]}
              >
                nick
              </MenuItem>
            </MenuMenu>
          </Menu>,
          <ConfirmModal
            icon="sign-out"
            message="Ви дійсно бажаєте вийти?"
            onClose={[Function]}
            onSuccess={[Function]}
            open={false}
            title="Вийти"
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <MenuHeader>
                <Logo />
              </MenuHeader>,
              <MenuMenu
                position="right"
              >
                <MenuItem
                  as={[Function]}
                  link={true}
                  name="lessons"
                  to="/lessons"
                >
                  Предмети
                </MenuItem>
                <MenuItem
                  link={true}
                  onClick={[Function]}
                >
                  nick
                </MenuItem>
              </MenuMenu>,
            ],
            "className": "menu_101l2md",
            "stackable": true,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <Logo />,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  false,
                  <MenuItem
                    as={[Function]}
                    link={true}
                    name="lessons"
                    to="/lessons"
                  >
                    Предмети
                  </MenuItem>,
                  <MenuItem
                    link={true}
                    onClick={[Function]}
                  >
                    nick
                  </MenuItem>,
                ],
                "position": "right",
              },
              "ref": null,
              "rendered": Array [
                false,
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "as": [Function],
                    "children": "Предмети",
                    "link": true,
                    "name": "lessons",
                    "to": "/lessons",
                  },
                  "ref": null,
                  "rendered": "Предмети",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "nick",
                    "link": true,
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "nick",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "icon": "sign-out",
            "message": "Ви дійсно бажаєте вийти?",
            "onClose": [Function],
            "onSuccess": [Function],
            "open": false,
            "title": "Вийти",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`header if user unlogin renders properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header
    user={Object {}}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Menu
          className="menu_101l2md"
          stackable={true}
        >
          <MenuHeader>
            <Logo />
          </MenuHeader>
          <MenuMenu
            position="right"
          >
            <MenuItem
              as={[Function]}
              link={true}
              name="lessons"
              to="/lessons"
            >
              Предмети
            </MenuItem>
            <MenuItem
              as={[Function]}
              link={true}
              name="sign-in"
              to="/login"
            >
              Увійти
            </MenuItem>
          </MenuMenu>
        </Menu>,
        <ConfirmModal
          icon="sign-out"
          message="Ви дійсно бажаєте вийти?"
          onClose={[Function]}
          onSuccess={[Function]}
          open={false}
          title="Вийти"
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <MenuHeader>
              <Logo />
            </MenuHeader>,
            <MenuMenu
              position="right"
            >
              <MenuItem
                as={[Function]}
                link={true}
                name="lessons"
                to="/lessons"
              >
                Предмети
              </MenuItem>
              <MenuItem
                as={[Function]}
                link={true}
                name="sign-in"
                to="/login"
              >
                Увійти
              </MenuItem>
            </MenuMenu>,
          ],
          "className": "menu_101l2md",
          "stackable": true,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <Logo />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                false,
                <MenuItem
                  as={[Function]}
                  link={true}
                  name="lessons"
                  to="/lessons"
                >
                  Предмети
                </MenuItem>,
                <MenuItem
                  as={[Function]}
                  link={true}
                  name="sign-in"
                  to="/login"
                >
                  Увійти
                </MenuItem>,
              ],
              "position": "right",
            },
            "ref": null,
            "rendered": Array [
              false,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "as": [Function],
                  "children": "Предмети",
                  "link": true,
                  "name": "lessons",
                  "to": "/lessons",
                },
                "ref": null,
                "rendered": "Предмети",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "as": [Function],
                  "children": "Увійти",
                  "link": true,
                  "name": "sign-in",
                  "to": "/login",
                },
                "ref": null,
                "rendered": "Увійти",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "icon": "sign-out",
          "message": "Ви дійсно бажаєте вийти?",
          "onClose": [Function],
          "onSuccess": [Function],
          "open": false,
          "title": "Вийти",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Menu
            className="menu_101l2md"
            stackable={true}
          >
            <MenuHeader>
              <Logo />
            </MenuHeader>
            <MenuMenu
              position="right"
            >
              <MenuItem
                as={[Function]}
                link={true}
                name="lessons"
                to="/lessons"
              >
                Предмети
              </MenuItem>
              <MenuItem
                as={[Function]}
                link={true}
                name="sign-in"
                to="/login"
              >
                Увійти
              </MenuItem>
            </MenuMenu>
          </Menu>,
          <ConfirmModal
            icon="sign-out"
            message="Ви дійсно бажаєте вийти?"
            onClose={[Function]}
            onSuccess={[Function]}
            open={false}
            title="Вийти"
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <MenuHeader>
                <Logo />
              </MenuHeader>,
              <MenuMenu
                position="right"
              >
                <MenuItem
                  as={[Function]}
                  link={true}
                  name="lessons"
                  to="/lessons"
                >
                  Предмети
                </MenuItem>
                <MenuItem
                  as={[Function]}
                  link={true}
                  name="sign-in"
                  to="/login"
                >
                  Увійти
                </MenuItem>
              </MenuMenu>,
            ],
            "className": "menu_101l2md",
            "stackable": true,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <Logo />,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  false,
                  <MenuItem
                    as={[Function]}
                    link={true}
                    name="lessons"
                    to="/lessons"
                  >
                    Предмети
                  </MenuItem>,
                  <MenuItem
                    as={[Function]}
                    link={true}
                    name="sign-in"
                    to="/login"
                  >
                    Увійти
                  </MenuItem>,
                ],
                "position": "right",
              },
              "ref": null,
              "rendered": Array [
                false,
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "as": [Function],
                    "children": "Предмети",
                    "link": true,
                    "name": "lessons",
                    "to": "/lessons",
                  },
                  "ref": null,
                  "rendered": "Предмети",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "as": [Function],
                    "children": "Увійти",
                    "link": true,
                    "name": "sign-in",
                    "to": "/login",
                  },
                  "ref": null,
                  "rendered": "Увійти",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "icon": "sign-out",
            "message": "Ви дійсно бажаєте вийти?",
            "onClose": [Function],
            "onSuccess": [Function],
            "open": false,
            "title": "Вийти",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
