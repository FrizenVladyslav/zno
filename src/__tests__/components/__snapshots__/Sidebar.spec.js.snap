// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`sidebar with lessons render properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Sidebar
    activeLesson="2"
    lessons={
      Array [
        Object {
          "_id": "1",
          "title": "title1",
        },
        Object {
          "_id": "2",
          "title": "title2",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <MenuItem
          header={true}
        >
          Предмет
        </MenuItem>,
        Array [
          <MenuItem
            active={false}
            as={[Function]}
            name="title1"
            to="/lessons/1"
          />,
          <MenuItem
            active={true}
            as={[Function]}
            name="title2"
            to="/lessons/2"
          />,
        ],
      ],
      "className": "sidebar_amlubi",
      "pointing": true,
      "vertical": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Предмет",
          "header": true,
        },
        "ref": null,
        "rendered": "Предмет",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "1",
        "nodeType": "class",
        "props": Object {
          "active": false,
          "as": [Function],
          "name": "title1",
          "to": "/lessons/1",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "2",
        "nodeType": "class",
        "props": Object {
          "active": true,
          "as": [Function],
          "name": "title2",
          "to": "/lessons/2",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <MenuItem
            header={true}
          >
            Предмет
          </MenuItem>,
          Array [
            <MenuItem
              active={false}
              as={[Function]}
              name="title1"
              to="/lessons/1"
            />,
            <MenuItem
              active={true}
              as={[Function]}
              name="title2"
              to="/lessons/2"
            />,
          ],
        ],
        "className": "sidebar_amlubi",
        "pointing": true,
        "vertical": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Предмет",
            "header": true,
          },
          "ref": null,
          "rendered": "Предмет",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "1",
          "nodeType": "class",
          "props": Object {
            "active": false,
            "as": [Function],
            "name": "title1",
            "to": "/lessons/1",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "2",
          "nodeType": "class",
          "props": Object {
            "active": true,
            "as": [Function],
            "name": "title2",
            "to": "/lessons/2",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`sidebar without lessons render properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Sidebar
    activeLesson={null}
    lessons={Array []}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <MenuItem
          header={true}
        >
          Предмет
        </MenuItem>,
        Array [],
      ],
      "className": "sidebar_amlubi",
      "pointing": true,
      "vertical": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Предмет",
          "header": true,
        },
        "ref": null,
        "rendered": "Предмет",
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <MenuItem
            header={true}
          >
            Предмет
          </MenuItem>,
          Array [],
        ],
        "className": "sidebar_amlubi",
        "pointing": true,
        "vertical": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Предмет",
            "header": true,
          },
          "ref": null,
          "rendered": "Предмет",
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
